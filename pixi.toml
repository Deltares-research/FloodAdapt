[project]
name = "flood-adapt"
readme = "README.md"
authors = [
    "Gundula Winter <Gundula.Winter@deltares.nl>",
    "Panos Athanasiou <Panos.Athanasiou@deltares.nl>",
    "Frederique de Groen <Frederique.deGroen@deltares.nl>",
    "Tim de Wilde <Tim.deWilde@deltares.nl>",
    "Julian Hofer <Julian.Hofer@deltares.nl>",
    "Daley Adrichem <Daley.Adrichem@deltares.nl>",
    "Luuk Blom <Luuk.Blom@deltares.nl>",
]
repository = "https://github.com/Deltares-research/FloodAdapt"
channels = ["conda-forge"]
platforms = ["linux-64", "win-64"]

[feature.dev.tasks]
# Installation
test-flood-adapt-cov = "pytest --cov=flood_adapt --cov-report=xml tests"
install-pre-commit = "pre-commit install"
install = { depends_on = [
    "install-pre-commit",
] }


# Lint
pre-commit = "pre-commit run --all-files"
lint = { depends_on = [ "pre-commit", ] }

# Tests
tests = { depends_on = ["lint", "test-flood-adapt-cov"] }

# Publish
build-python-wheel = { cmd = "rm --recursive --force dist && python -m build && twine check dist/*" }
publish-python = { cmd = "twine upload dist/*", depends_on = ["build-python-wheel", ] }

# Release TODO
github-release = "python utils/github-release.py"

[feature.docs.tasks]
quartodoc-build = { cmd = "quartodoc build && rm objects.json", cwd = "docs", inputs = ["docs/_quarto.yml", "flood_adapt/api"], outputs = ["api_reference"] }
quarto-preview = { cmd = "quarto preview docs", depends_on = [ "quartodoc-build"] }
quarto-check = { cmd = "quarto check all", depends_on = ["quartodoc-build"] }
quarto-render = { cmd = "quarto render docs --to html --execute", depends_on = ["quartodoc-build"] }
# sphinx-build = { cmd = "" }
# sphinx-preview = { cmd = "quarto preview docs", depends_on = [ "sphinx-build"] }

docs = { depends_on = ["quarto-preview", "sphinx-preview"] }

[dependencies]
python = ">3.8"

basemap = "*"
cartopy = "*"
cftime = "*"
dask = "<2024.7"
fiona = "*"
gdal = "*"
geojson = "*"
geopandas = "*"
netcdf4 = "*"
numpy  = "<2"
numpy-financial = "*"
pandas = "<2"
plotly = "*"
pydantic = "*"
pydantic-settings = "*"
pygeos = "*"
pyogrio = "*"
pyproj = "*"
rtree = "*"
shapely = "*"
tomli = "*"
tomli-w = "*"

[pypi-dependencies]
cht-cyclones = { git = "https://github.com/deltares/cht_cyclones.git" }
cht-meteo = "*"
cht-observations =  { git = "https://github.com/deltares/cht_observations.git" }
cht-tide = "*"
fiat-toolbox = "*"
hydromt-fiat = { git = "https://github.com/deltares/hydromt_fiat.git" }
# Checking out to an actual branch instead of a commit hash not implemented yet: https://github.com/prefix-dev/pixi/issues/1206
# `rev` should be the latest commit on the FA_quadtree branch
hydromt-sfincs = { git = "https://github.com/deltares/hydromt_sfincs.git", rev = "560ce76c546a067108790977295871ce635c840b" }

[feature.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pre-commit = "3.8.0"
ruff       = "0.5.5"
typos      = "1.23.6"
twine = "*"

[feature.docs.dependencies]
jupyter = "*"
jupyter-cache = "*"
jupyterlab = "*"
notebook = "*"
nbformat = "*"
matplotlib = "*"
regex = "*"
setuptools = ">=61.0.0"
quarto = "*"
quartodoc = "*"

[feature.docs.pypi-dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"
regex = "*"

# TODO fix dependencies so we can support other python versions
[feature.py311.dependencies]
python = "3.11.*"

[feature.py310.dependencies]
python = "3.10.*"

[environments]
default = { features = ["py311"], solve-group = "py311" }
dev = { features = ["dev", "py311"], solve-group = "py311" }
docs = { features = ["docs", "py311"], solve-group = "py311" }
py311 = { features = ["py311"], solve-group = "py311" }
py310 = ["py310"]
