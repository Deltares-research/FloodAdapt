[build-system]
requires = [
    "setuptools>=61",
]
build-backend = "setuptools.build_meta"

[project]
name = "flood-adapt"
description = "A software package support system which can be used to assess the benefits and costs of flood resilience measures"
readme = "README.md"
authors = [
    { name = "Gundula Winter", email = "Gundula.Winter@deltares.nl" },
    { name = "Panos Athanasiou", email = "Panos.Athanasiou@deltares.nl" },
    { name = "Frederique de Groen", email = "Frederique.deGroen@deltares.nl" },
    { name = "Tim de Wilde", email = "Tim.deWilde@deltares.nl" },
    { name = "Julian Hofer", email = "Julian.Hofer@deltares.nl" },
    { name = "Daley Adrichem", email = "Daley.Adrichem@deltares.nl" },
    { name = "Luuk Blom", email = "Luuk.Blom@deltares.nl" },
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Topic :: Scientific/Engineering :: Hydrology",
]
requires-python = ">=3.8,<3.13"

# Any package below will be taken from pypi.
# These are ignored if any packages is also defined in the section: [tool.pixi.dependencies]
dependencies = [
    "cht-cyclones@ git+https://github.com/deltares/cht_cyclones.git",
    "cht-meteo",
    "cht-observations@ git+https://github.com/deltares/cht_observations.git",
    "cht-tide",
    "dask<2024.7.0", # The last version that still supports pandas 1.x, which we need until fiat-toolbox and noaa_cops become compatible with pandas 2.x
    "fiat-toolbox",
    "fiona",
    "geojson",
    "geopandas",
    "hydromt-fiat@ git+https://github.com/deltares/hydromt_fiat.git",
    # "hydromt-sfincs@ git+https://github.com/Deltares-research/hydromt_sfincs_insiders.git@FA_quadtree", # TODO replace with a release or main branch after quadtree readwrite is copied to main
    "numpy < 2.0",
    "numpy-financial",
    "pandas",
    "plotly",
    "pydantic",
    "pydantic-settings",
    "pyogrio",
    "setuptools",
    "tomli",
    "tomli-w",
]
dynamic = [
    "version",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pre-commit == 3.8.0",
    "ruff       == 0.5.5",
    "typos      == 1.23.6",
]
build = [
    "build",
    "twine",
]
docs = [
    "jupyter",
    "jupyter-cache",
    "matplotlib",
    "quartodoc",
    "regex",
]

[project.urls]
Source = "https://github.com/Deltares-research/FloodAdapt"

[tool.setuptools]
zip-safe = false

[tool.setuptools.dynamic.version]
attr = "flood_adapt.__version__"

[tool.setuptools.packages.find]
include = [
    "flood_adapt",
    "flood_adapt.*",
]

[tool.setuptools.package-data]
flood_adapt = [
    "py.typed",
]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "D",
    "E",
    "F",
    "NPY",
    "PD",
    "C4",
    "I",
]
ignore = [
    "D10",
    "D417",

    "PD010",
    "PD013",
    "PD901",

    "E501",
    "E741",
    "NPY201"
]
fixable = [
    "I",
    "F",
    "D"
]
[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.typos]
files.extend-exclude = [
    "*.js",
    "*.css",
    "*.svg",
]
files.ignore-hidden = true

[tool.typos.default.extend-words]
strat = "strat"

################################################################
############################# PIXI #############################
################################################################
[tool.pixi.pypi-dependencies]
hydromt-sfincs = { git = "https://github.com/Deltares-research/hydromt_sfincs_insiders", rev = "560ce76c546a067108790977295871ce635c840b" }
flood_adapt = {path = ".", editable = true }


[tool.pixi.feature.gui.pypi-dependencies]
Census = "*"
guitares = "*"
branca = "*"
python-dotenv = "*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64"]

[tool.pixi.environments]
py311 = { features = ["py311"], solve-group = "py311" }
py310 = { features = ["py310"], solve-group = "py310" }

build = { features = ["build"], solve-group = "py311" }
dev = { features = ["dev"], solve-group = "py311" }
docs = { features = ["docs"], solve-group = "py311" }
gui = {features = ["gui"], solve-group = "py311" }

[tool.pixi.feature.dev.tasks]
install-pre-commit = {cmd = "pre-commit install", outputs=[".git/hooks/pre-commit"]}
pre-commit = {cmd = "pre-commit run --all-files", depends_on=["install-pre-commit"]}
tests = {cmd = "pytest --cov=flood_adapt --cov-report=xml tests"}

[tool.pixi.feature.gui.tasks]
init-submodule =    {cmd = "git submodule update --init --recursive", inputs=[".gitmodules"], outputs = ["./FloodAdapt-GUI"]}
update-to-latest =  {cmd = "git submodule update --remote --merge", depends_on=["init-submodule"] }
editable-install =  {cmd = "pip install -e ./FloodAdapt-GUI --no-deps", depends_on=["init-submodule"], outputs=["./FloodAdapt-GUI/floodadapt_gui.egg-info"]}
gui = { cmd = "python ./FloodAdapt-GUI/floodadapt_gui/floodadapt_run.py", depends_on=["update-to-latest", "editable-install"]}
