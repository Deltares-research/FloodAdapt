# UnitTypesLength { #flood_adapt.unit_system.UnitTypesLength }

```python
unit_system.UnitTypesLength()
```

Units of length.

## Attributes {.doc-section .doc-section-attributes}

<code>[**meters**]{.parameter-name} [:]{.parameter-annotation-sep} [[meters](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.meters`)]{.parameter-annotation}</code>

:

<code>[**centimeters**]{.parameter-name} [:]{.parameter-annotation-sep} [[centimeters](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.centimeters`)]{.parameter-annotation}</code>

:

<code>[**millimeters**]{.parameter-name} [:]{.parameter-annotation-sep} [[millimeters](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.millimeters`)]{.parameter-annotation}</code>

:

<code>[**feet**]{.parameter-name} [:]{.parameter-annotation-sep} [[feet](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.feet`)]{.parameter-annotation}</code>

:

<code>[**inch**]{.parameter-name} [:]{.parameter-annotation-sep} [[inch](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.inch`)]{.parameter-annotation}</code>

:

<code>[**miles**]{.parameter-name} [:]{.parameter-annotation-sep} [[miles](`flood_adapt.objects.forcing.unit_system.UnitTypesLength.miles`)]{.parameter-annotation}</code>

:
