# GreenInfrastructure { #flood_adapt.objects.GreenInfrastructure }

```python
objects.GreenInfrastructure()
```

The expected variables and data types of the "green infrastructure" hazard measure.

## Attributes {.doc-section .doc-section-attributes}

<code>[**name**]{.parameter-name} [:]{.parameter-annotation-sep} [[str](`str`)]{.parameter-annotation}</code>

:   Name of the measure.

<code>[**description**]{.parameter-name} [:]{.parameter-annotation-sep} [[str](`str`)]{.parameter-annotation}</code>

:   Description of the measure.

<code>[**type**]{.parameter-name} [:]{.parameter-annotation-sep} [[MeasureType](`flood_adapt.objects.measures.measures.MeasureType`)]{.parameter-annotation}</code>

:   Type of measure. Should be "greening"

<code>[**selection_type**]{.parameter-name} [:]{.parameter-annotation-sep} [[SelectionType](`flood_adapt.objects.measures.measures.SelectionType`)]{.parameter-annotation}</code>

:   Type of selection. Should be "polygon" or "aggregation_area".

<code>[**height**]{.parameter-name} [:]{.parameter-annotation-sep} [([us](`flood_adapt.objects.forcing.unit_system`).[UnitfulHeight](`flood_adapt.objects.forcing.unit_system.UnitfulHeight`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Height of the green infrastructure.

<code>[**volume**]{.parameter-name} [:]{.parameter-annotation-sep} [([us](`flood_adapt.objects.forcing.unit_system`).[UnitfulVolume](`flood_adapt.objects.forcing.unit_system.UnitfulVolume`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Volume of the green infrastructure.

<code>[**polygon_file**]{.parameter-name} [:]{.parameter-annotation-sep} [([str](`str`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Path to a polygon file, either absolute or relative to the measure path.

<code>[**aggregation_area_type**]{.parameter-name} [:]{.parameter-annotation-sep} [([str](`str`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Type of aggregation area. Should be "aggregation_area".

<code>[**aggregation_area_name**]{.parameter-name} [:]{.parameter-annotation-sep} [([str](`str`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Name of the aggregation area.

<code>[**percent_area**]{.parameter-name} [:]{.parameter-annotation-sep} [([float](`float`), [Optional](`typing.Optional`))]{.parameter-annotation}</code>

:   Percentage of the area that is green infrastructure.

## Methods

| Name | Description |
| --- | --- |
| [calculate_polygon_area](#flood_adapt.objects.GreenInfrastructure.calculate_polygon_area) | Calculate area of a GeoDataFrame Polygon. |
| [calculate_volume](#flood_adapt.objects.GreenInfrastructure.calculate_volume) | Determine volume from area of the polygon and infiltration height. |

### calculate_polygon_area { #flood_adapt.objects.GreenInfrastructure.calculate_polygon_area }

```python
objects.GreenInfrastructure.calculate_polygon_area(
    gdf: gpd.GeoDataFrame,
    site: Site,
)
```

Calculate area of a GeoDataFrame Polygon.

#### Parameters {.doc-section .doc-section-parameters}

<code>[**gdf**]{.parameter-name} [:]{.parameter-annotation-sep} [[gpd](`geopandas`).[GeoDataFrame](`geopandas.GeoDataFrame`)]{.parameter-annotation}</code>

:   Polygon object

<code>[**site**]{.parameter-name} [:]{.parameter-annotation-sep} [[Site](`flood_adapt.config.site.Site`)]{.parameter-annotation}</code>

:   site config (used for CRS)

#### Returns {.doc-section .doc-section-returns}

<code>[**area**]{.parameter-name} [:]{.parameter-annotation-sep} [[float](`float`)]{.parameter-annotation}</code>

:   Area of the given polygon

### calculate_volume { #flood_adapt.objects.GreenInfrastructure.calculate_volume }

```python
objects.GreenInfrastructure.calculate_volume(
    area: us.UnitfulArea,
    height: us.UnitfulHeight,
    percent_area: float = 100.0,
)
```

Determine volume from area of the polygon and infiltration height.

#### Parameters {.doc-section .doc-section-parameters}

<code>[**area**]{.parameter-name} [:]{.parameter-annotation-sep} [[us](`flood_adapt.objects.forcing.unit_system`).[UnitfulArea](`flood_adapt.objects.forcing.unit_system.UnitfulArea`)]{.parameter-annotation}</code>

:   Area of polygon with units (calculated using calculate_polygon_area)

<code>[**height**]{.parameter-name} [:]{.parameter-annotation-sep} [[us](`flood_adapt.objects.forcing.unit_system`).[UnitfulHeight](`flood_adapt.objects.forcing.unit_system.UnitfulHeight`)]{.parameter-annotation}</code>

:   Water height with units

<code>[**percent_area**]{.parameter-name} [:]{.parameter-annotation-sep} [[float](`float`)]{.parameter-annotation} [ = ]{.parameter-default-sep} [100.0]{.parameter-default}</code>

:   Percentage area covered by green infrastructure [%], by default 100.0

#### Returns {.doc-section .doc-section-returns}

<code>[]{.parameter-name} [:]{.parameter-annotation-sep} [[float](`float`)]{.parameter-annotation}</code>

:   Volume [m3]
