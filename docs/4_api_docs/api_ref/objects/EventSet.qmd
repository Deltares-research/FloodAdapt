# EventSet { #flood_adapt.objects.EventSet }

```python
objects.EventSet()
```

BaseModel describing the expected variables and data types for parameters of EventSet.

An EventSet is a collection of events that can be used to create a scenario and perform a probabilistic risk assessment.

## Attributes {.doc-section .doc-section-attributes}

<code>[**name**]{.parameter-name} [:]{.parameter-annotation-sep} [[str](`str`)]{.parameter-annotation}</code>

:   The name of the event.

<code>[**description**]{.parameter-name} [:]{.parameter-annotation-sep} [[str](`str`)]{.parameter-annotation}</code>

:   The description of the event. Defaults to "".

<code>[**mode**]{.parameter-name} [:]{.parameter-annotation-sep} [[Mode](`flood_adapt.objects.events.events.Mode`)]{.parameter-annotation}</code>

:   The mode of the event. Defaults to Mode.risk.

<code>[**sub_events**]{.parameter-name} [:]{.parameter-annotation-sep} [[List](`typing.List`)\[[SubEventModel](`flood_adapt.objects.events.event_set.SubEventModel`)\]]{.parameter-annotation}</code>

:   The sub events of the event set.

## Methods

| Name | Description |
| --- | --- |
| [load_file](#flood_adapt.objects.EventSet.load_file) | Load object from file. |
| [load_sub_events](#flood_adapt.objects.EventSet.load_sub_events) | Load sub events from a list or from a file path. |

### load_file { #flood_adapt.objects.EventSet.load_file }

```python
objects.EventSet.load_file(
    file_path: Path | str | os.PathLike,
    load_all: bool = False,
)
```

Load object from file.

### load_sub_events { #flood_adapt.objects.EventSet.load_sub_events }

```python
objects.EventSet.load_sub_events(
    sub_events: Optional[List[Event]] = None,
    file_path: Optional[Path] = None,
)
```

Load sub events from a list or from a file path.
