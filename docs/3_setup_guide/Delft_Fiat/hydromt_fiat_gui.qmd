---
title:	Delft-FIAT model builder
filters:
  - lightbox
lightbox: auto
execute:
  echo: false
jupyter: python3
number-sections: true
format: html
---

The Delft-FIAT model builder allows users to rapidly set up a Delft-FIAT model using a [quick-build](#sec-quickbuild) option using default modeling choices, or to build a [tailored Delft-FIAT model](#sec-tailored_model), making the Delft-FIAT model creation accessible for any type of user, especially users without modeling experience. 

# Getting started and selecting your model boundary {#sec-getting-started}

The initial steps to set up a Delft-FIAT model with the Delft-FIAT model builder are the same whether you set up a [quickbuild model](#sec-quickbuild) or [tailored model](#sec-tailored_model).  

<u>*Step-by-step instructions: Get started*</u> 

  1. Go to **File** >> **Select Working Directory**.
  2. Select an output folder.
  3. Go to the **Model Boundary | Quickbuild**-tab
  4. Generate the model boundary (@fig-boundaries).
        a) **Draw polygon**: Click on the map and draw a valid polygon. Double click will end the drawing process.
        b) **Draw box**: Click on the map and draw a box. Double click will end the drawing process.
        c) **SFINCS model domain**: If you aleady created a SFINCS model you can select the **/gis-folder**. Do <u>not</u> select the region file itself. It will be recognized automatically by the model.
        d) **Upload file**: You can upload your own boundary in form of a vector file (e.g. *.gpkg*, *.geojson*) with a valid polygon shape. 

  2. When you are finished, click **"Generate Boundary"**.

![Workflow to create model boundaries.](../../_static/figures/draw_boundaries.svg){#fig-boundaries}

::: {.callout-note}
After you selected the working directory the Delft-FIAT model builder generates the folder structure as described in the section [Folder Structure](index.qmd) in the output folder.
:::

The video tutorial below showcases the model boundary creation in the Delft-FIAT model builder with the option "Draw Polygon" (@fig-model_boundaries).

::: {#fig-model_boundaries}

{{< video ../../_static/videos/hydromt_fiat/Generate_Boundaries.mp4 >}}

Create model boundaries using the "Draw Polygon" method.

:::

# Quickbuild {#sec-quickbuild}
The **quickbuild** is a complete Delft-FIAT model which can be set up anywhere in the **United States** with ease. It doesn't require any user input except for defining the [model boundary](#sec-getting-started).  
The quickbuild sets up the exposure data incl. roads and assigns the corresponding vulnerability curve to each asset. Moreover, the social vlunerability index (SVI) module of the Delft-FIAT model builder calculates the [social vulnerability index](#sec-svi) and downloads [equity data (income and population)](#sec-svi).

The **quickbuild** obtains the model data from the following sources:  

1. **Exposure**: National Structure Inventory (NSI)
2. **Vulnerability curves**: FEMA HAZUS database
3. **Socio-economic/equity data**: US census data
4. **Roads**: Open Street Map (OSM)

![Workflow about how to use the "Quickbuild"-option.](../../_static/figures/quickbuild.svg){#fig-quickbuild}

<u>*Step-by-step instructions: Quick Build*</u> 

  1. Go to the **Model Boundary | Quickbuild**-tab and create the model boundary (@sec-getting-started; @fig-quickbuild).
  2. After you generated the boundary you can select the **quickbuild** option and the Delft-FIAT model is built.

The steps are demonstrated in the video tutorial below(@fig-nsi_quickbuild). 

::: {#fig-nsi_quickbuild}

{{< video ../../_static/videos/hydromt_fiat/Quickbuild.mp4 >}}

Quickbuild option in the United States using NSI exposure, FEMA Hazus Damage Curves and OSM roads.

:::

# Tailored Delft-FIAT model {#sec-tailored_model}
To create a more accurate and refined Delft-FIAT model you can configure it with your own data. The model can be set up at any location worldwide.

## Create the exposure data
The quality of the Delft-FIAT model is directly influenced by the exposure data. It's favourable to use as much local and regional data as possible/available to improve the accuracy of the model. The Delft-FIAT model builder enables you to refine the exposure data. The different options are described in the following sections:

  1. [Create a base model with the default data sources](#sec-basemodel)
  2. [Refine the Finished Floor Height/ Import Finished Floor Height User Input](#sec-finished_floor_height) (*optional*)
  3. [Refine the Ground Elevation/ Import Ground Elevation User Input](#sec-ground_elevation) (*optional*)
  4. [Refine the Maximum Potential Damages/Import Maximum Potential Damage User Input](#sec-maximum_potential_damages) (*optional*)

### Create a base model with the default data sources: NSI and/or OSM  {#sec-basemodel}
Determined by the location of the model boundary, the Delft-FIAT model builder uses different data sources to download the **building exposure data**:

1. **United States**: National Structure Inventory (NSI)
2. **Global**: Open Street Map (OSM)

Not only does FloodAdapt calculate building impacts, but it also evaluates the non-flooded and flooded state of roads. Thus, in the case of Delft-FIAT being used within FloodAdapt you must add **road data** to the Delft-FIAT model. The Delft-FIAT model builder allows you to obtain road information from Open Street Map for any model location worldwide. 

<u>*Step-by-step instructions: Set up the exposure data*</u>

1. Generate your [model boundary](#sec-getting-started).
2. Open the **"Exposure"**-tab from the top panel (@fig-exposure). From the bottom panel select the **"Asset Location"**-tab.
3. Select the correct data source for your model. For a **U.S.** based model start with **National Structure Inventory** data. For a **global model** start with **Open Street Map** data.

  + <u>**Only global model (OSM)**</u>:  
    *Damage currency:* The default JRC damage currency is in **Euro**.

    ::: {.callout-warning}
    Don't change the default damage currency from Euro to another currency.There is no currency converter tool implemented in the Delft-FIAT model builder yet.
    :::

    *Finished floor height:* Assign a value (meters) for the finished floor height to all assets at once.

    ::: {.callout-tip}
    You can refine the finised floor height for the individual assets in the **Exposure**- >> **Finished Floor Height**-tab.
    :::

4. Include **OSM roads** by checking the checkbox "Include OSM roads".
5. Add to model.

The video tutorials demonstrate the exposure setup using the NSI exposure and OSM roads (@fig-nsi_exposure) as well as the exposure setup for a global model, using OSM data (incl. roads; @fig-osm_exposure).

![Workflow to setup exposure data with NSI (National Structure Inventory) or OSM (Open Street Map) as data source.](../../_static/figures/exposure.svg){#fig-exposure}

After completing the steps outlined above the "default" exposure for a **base model** is fully established.  


After completing the steps outlined above the "default" exposure for a **base model** is fully established.  
The following sections of this chapter elaborate on how the user can refine the model or import their own data. 
::: {#fig-nsi_exposure}

{{< video ../../_static/videos/hydromt_fiat/Exposure_NSI.mp4 >}}

Exposure setup in the United States using NSI exposure and OSM roads.

:::


::: {#fig-osm_exposure}

{{< video ../../_static/videos/hydromt_fiat/Exposure_OSM.mp4 >}}

Global exposure setup using OSM exposure and OSM roads .

:::

The following sections in this chapter elaborate on how you can refine the model or import their own data. 

### Refine Finished Floor Height {#sec-finished_floor_height}
You have the option to **adjust** the finished floor height **default values** of the base model (NSI or OSM) by importing a point- or polygon vector file (e.g. *.gpkg*, *.geojson*) with different data values for individual assets, specific areas or the whole model domain. 

![Workflow to refine the finished floor height.](../../_static/figures/finished_floor_height.svg){#fig-finished_floor_height}

::: {.callout-note}
The Delft-FIAT model builder performs a spatial joint of the exposure assets with the point-/polygon finished floor height vector file and assigns the new values to the intersecting/nearest asset.
:::

<u>*Step-by-step instructions: Import the finished floor height*</u>  

1. Open the **"Exposure"**-tab from the top panel and select the **"Finished Floor Height"**-tab in the bottom panel.
2. Select the file source of your finished floor height data. The file must be a point- or polygon vector file (e.g. *.gpkg*, *.geojson*).
3. Load the file. This will load the data columns in your file into the **Attribute ID** drop-down menu.
4. Select the column that holds the finished floor height data. 
5. *optional settings*: Define the method for the spatial joint. The default for point data is *'nearest'* and for polygon data *'intersection'*. The default will be automatically selected by the Delft-FIAT model builder. You can keep the default settings if you don't wish to change the method.
6. Add to model.

::: {#fig-ffh}

{{< video ../../_static/videos/hydromt_fiat/Finished_floor_height.mp4 >}}

Model refinement with user input for finished floor height. 

:::

### Refine Ground Elevation {#sec-ground_elevation}
To import ground elevation data, you must provide a DEM raster file (e.g. *.tif*) with the updated elevation values. The Delft-FIAT model builder calculates the mean value from the pixels within the shape of each asset and assigns this value to the associated asset.   

![Workflow to refine the ground elevation.](../../_static/figures/ground_elevation.svg){#fig-ground_elevation}

<u>*Step-by-step instructions: Import ground elevation data*</u>   

1. Open the **"Exposure"**-tab on the top panel and select the **"Ground Elevation"**-tab in the bottom panel.
2. There are two options in the drop-down menu to set up the ground elevation data:
    1. **SFINCS Ground Elevation**
        a. If you have already a SFINCS model set up, you can use the same ground elevation from your SFINCS model. Select the  **subgrid-folder** of the SFINCS model, in which the dep_subgrid.tif-file is located. Do <u>not</u> select the file, simply the folder, the Delft-FIAT model builder will recognize the file automatically.
        b. Add to model.
    2. **Upload file**
        a. Select the file source of your ground elevation data. The file must be a raster file (e.g. *.tif*).
        b. Select the elevation unit of your file (meters or feet).
        c. Add to model. 

::: {#fig-ground_elevation}

{{< video ../../_static/videos/hydromt_fiat/Ground_elevation.mp4 >}}

Model refinement with user input for ground elevation. 

:::

### Refine Maximum Potential Damages {#sec-maximum_potential_damages}
You have the option to **adjust** the **default values** for the max. potential damages by importing a point- or polygon vector file (e.g. *.gpkg*, *.geojson*) with different data values for individual assets,specific areas or the complete model domain. 
When refining the max. potential damages it is necessary to distinguish between **structure** and **content** damage.

::: {.callout-note}
The Delft-FIAT model builder performs a spatial joint of the exposure assets with the point-/polygon max. potential damages vector file and assigns the new values to the intersecting/nearest asset.
:::

![Workflow to refine the fmaximum potential damage (structure/content).](../../_static/figures/max_potential_damages.svg){#fig-max_potential_damages}

<u>*Step-by-step instructions: Import the Max. Potential Damages*</u>   

  1. Open the **"Exposure"**-tab on the top panel and select the **"Max. Potential Damages"**-tab in the bottom panel. 
  2. Select the file source of your max. potential damage data. The file must be a point- or polygon vector file (e.g. *.gpkg*, *.geojson*).
  3. Load the file. This will load the data columns in your file into the **Attribute ID** drop-down menu.
  4. Select the column that holds the max. potential damage data (either "structure"or "content").
  5. Select the damage type you wish to update, either *structure* or *content*.  
  6.  *optional settings*: Define the method for the spatial joint. The default for point data is *'nearest'* and for polygon data *'intersection'*. The default will be automatically selected by the Delft-FIAT model builder. You can keep the default settings if you don't wish to change the method.
  7. Add to model.

  ::: {#fig-max_pot_damages}

{{< video ../../_static/videos/hydromt_fiat/Max_potential_damages.mp4 >}}

Model refinement with user input for maximum potential damages. 

:::

  ::: {#fig-max_pot_damages}

{{< video ../../_static/videos/hydromt_fiat/Max_potential_damages.mp4 >}}

Model refinement with user input for maximum potential damages. 

:::

### Assign vulnerability curves
Delft-FIAT calculates the damages on the bases on vulnerability curves. There are two data sources which the vulnerability curves can be downloaded from, determined by the location of your model:

1. **United States:** FEMA Hazus Curves
2. **Global:** JRC Vulnerability Curves

<u>*Step-by-step instructions: Assign vulnerability curves*</u>

  1. Open the **"Vulnerability"**-tab on the top panel (@fig-vulnerability_curve). 
  2. The Delft-FIAT model builder will **automatically** select the **default data source** based upon your exposure data (NSI or global). Therefore, you only need to add the curves to the model without further adjustment. 
  3. ***Only NSI***: If desired, you can specify different curves from the default  by selecting "Specify different damage curves". First, select the asset you want to assign another damage curve to and second, select a new damage curve (@fig-update_curves). 

![Workflow to assign vulnerability curves to assets with option to update default NSI vulnerability curves.](../../_static/figures/vulnerability.svg){#fig-vulnerability_curve}

You can follow the steps in the video below (@fig-vulnerability).

::: {#fig-vulnerability}

{{< video ../../_static/videos/hydromt_fiat/NSI_Vulnerability.mp4 >}}

Assign the default vulnerability curves to the exposure data. 

:::


Assign the default vulnerability curves to the exposure data. 

:::

::: {#fig-update_curves}

{{< video ../../_static/videos/hydromt_fiat/Update_default_damage_curve.mp4 >}}

***Only NSI***: Update default vulnerability curves. 

:::

### Additional features
#### Social Vulnerability Index (SVI) and Equity {#sec-svi}
Delft-FIAT allows you to evaluate the equitible distribution of damages and benefits by using the **social vulnerability index** and **equity**. If your model site is located in the United States, SVI data can be calculated based upon recent literature. 
However, you have the freedom to upload any social vulnerability index and/or equity layer in form of a **vector file** (e.g. *.gpkg*, *.geojson*) and assign a value to each asset that overlaps the layer at any location (please refer to section [Additional Attributes](#sec-add_attributes)).

<u>*Step-by-step instructions: Download SVI and equity data (United States)*</u>  

  1. Open the **"SVI + Equity"**-tab on the top panel.
  2. In the bottom panel, select the year you wish to download data frame.
  3. Check the checkboxes to download, SVI and/or Equity data.

If your model is setup in a location outside the U.S please refer to the section [Additional Attributes](#sec-add_attributes) for instructions. 

For a detailed demonstration please refer to @fig-svi_equity.

::: {#fig-svi_equity}

{{< video ../../_static/videos/hydromt_fiat/SVI_and_Equity_detail.mp4 >}}

Add additional attributes to your model. In this example, a land use layer is added to the model, and assets are assigned to the land use category that encompasses each asset. 

:::

#### Additional attribtues {#sec-add_attributes}
Not only social vulnerability and/or equity can be linked to the exposure data. Any additional layer (e.g. landuse, administrative boundaries or others) can be added to your model (@fig-svi). The additional attribute layer must be a **vector file** (e.g. *.gpkg*, *.geojson*) in the same geographical location of your model. 

![Adding SVI/Equity and additional attributes (e.g. landuse) to the model](../../_static/figures/SVI_additional_attr.svg){#fig-svi}

If you wish to add any **aggregation** layer or **additional attribute** layer to your model follow these intstructions. The same instructions apply for any SVI and/or equity layer. 

<u>*Step-by-step instructions: Add additional attributes*</u>

  1. Open the **"Additional Attributes"**-tab on the top panel.
  2. Select the **source** of your vector layer . 
  3. Load the file. This will load the data columns in your file into the **Attribute ID** drop-down menu.
  4. Select the column of the attribute/aggregation you wish to add on your model. 
  5. Give your layer a **Label** (free-text). This label will be the header for your new additional attribute/aggregation layer in the output data. 
  5. **Add** the new layer and the layer will appear in the table in the *"Overview attribute"*-table. 
  6. In the bottom panel *"Overview attribute"*, you can check the checkbox **"Display Attribute"** to verify the correct output of the vector layer. 
  7. You can repeat this process for as many layers as you wish.
  8. As soon you added all the layers you wish to add, select **Add to model**.
 
For a detailed demonstration please refer to the video tutorial @fig-additional_attr.

::: {#fig-additional_attr}

{{< video ../../_static/videos/hydromt_fiat/Additional_Attributes_NSI.mp4 >}}

Add additional attributes to your model. In this example, a land use layer is added to the model, and assets are assigned to the land use category that encompasses each asset. 

:::


### Create model and visualize the output

At this point you are ready to create the Delft-FIAT model.  Open the **"Create Model"**-tab on the top panel and verify that data sources in the bottom tab match your model input. If so, **create your model** (@fig-create_model).

::: {#fig-create_model}

{{< video ../../_static/videos/hydromt_fiat/create_model_and_output.mp4 >}}

Finalization of the model and visualization of the output.  

:::