# FloodAdaptLogging { #flood_adapt.FloodAdaptLogging }

`FloodAdaptLogging(self, file_path=None, loglevel_console=logging.WARNING, loglevel_root=logging.INFO, loglevel_files=logging.DEBUG, formatter=_DEFAULT_FORMATTER)`



## Methods

| Name | Description |
| --- | --- |
| [add_file_handler](#flood_adapt.FloodAdaptLogging.add_file_handler) | Add a file handler to the logger that directs outputs to a the file. |
| [getLogger](#flood_adapt.FloodAdaptLogging.getLogger) | Get a logger with the specified name. If no name is provided, return the root logger. |
| [remove_file_handler](#flood_adapt.FloodAdaptLogging.remove_file_handler) | Remove a file handler from the logger, which stops sending logs to that file and closes it. |
| [shutdown](#flood_adapt.FloodAdaptLogging.shutdown) |  |
| [to_file](#flood_adapt.FloodAdaptLogging.to_file) | Open a file at filepath to write logs to. Does not affect other loggers. |

### add_file_handler { #flood_adapt.FloodAdaptLogging.add_file_handler }

`FloodAdaptLogging.add_file_handler(file_path, loglevel=logging.DEBUG, formatter=None)`

Add a file handler to the logger that directs outputs to a the file.

### getLogger { #flood_adapt.FloodAdaptLogging.getLogger }

`FloodAdaptLogging.getLogger(name=None, level=None)`

Get a logger with the specified name. If no name is provided, return the root logger.

If the logger does not exist, it is created with the specified level. If no level is provided, the logger inherits the level of the root logger.

#### Parameters

| Name    | Type   | Description                                                                                 | Default   |
|---------|--------|---------------------------------------------------------------------------------------------|-----------|
| `name`  | str    | The name of the logger. If not provided, the root logger is returned.                       | `None`    |
| `level` | int    | The level of the logger. If not provided, the logger inherits the level of the root logger. | `None`    |

#### Returns

| Type           | Description                         |
|----------------|-------------------------------------|
| logging.Logger | The logger with the specified name. |

### remove_file_handler { #flood_adapt.FloodAdaptLogging.remove_file_handler }

`FloodAdaptLogging.remove_file_handler(file_path)`

Remove a file handler from the logger, which stops sending logs to that file and closes it.

### shutdown { #flood_adapt.FloodAdaptLogging.shutdown }

`FloodAdaptLogging.shutdown()`



### to_file { #flood_adapt.FloodAdaptLogging.to_file }

`FloodAdaptLogging.to_file(file_path=None, loglevel=logging.DEBUG, formatter=_DEFAULT_FORMATTER)`

Open a file at filepath to write logs to. Does not affect other loggers.

When the context manager exits (via regular execution or an exception), the file is closed and the handler is removed.
